CPI = client pusher
CGS= clientGameState

* Clients cannot have access to the values of the cards, or the deck, or anything that could lead to cheating, 
so server must do the heavy lifting

* Must do individual CGS validation everytime a new CGS is fired to check if this client did not miss any CGS changes(if did not miss any events)

GameFlow:
    ** Cut:

    {
        type: 'SELF' | 'FOE' 
        success: boolean;
        isFirstPlayerToCut: boolean;
        isRightCard: boolean;
    }
        
        * can be successful or unsuccessful (unsuccessful cut is when a player try to cut but other player cut first)
            * successful:
                * the player was the first player to cut on this top card of discard pile)
                * it was the right card
            * unsuccessful:
                
                if (isFirstPlayerToCut === false) {
                    * everyone sees the card
                }

                if (isRightCard === false) {
                    * everyone sees the card and draws a new card to the hand
                }

        * triggerd by client event (uploads CGS: topDiscardPileCard, cardsOnTheHandOfTheCutter--, maybe cards on the hand of the  )
        * all top cards of the discard pile can be Cut
        * cuts are client events ;
        * when a player finish a round
    *1. One player creates a room(becomes the roomOwner).
        - client pusher(CP) initiates a pusher presence-channel
        - clientGameState(CGS) is initialized on the client.
        - roomOwner fires an event to initialize serverGameState.

    *2. Player waits more players to join(2 player min)
        - when a player enters the room, fires an event to update players CGS with new player

    *3. players need to click on some "ready" button to mark that they are ready to begin playing.
        - ready or not ready fires an event to update CGS with players ready
            - should be a delay to prevent users from abusing this button/event, overwhelming the channel
    
    *4. when every player on the room is ready, the room owner can start the game. So he does.
        - fires a "start game" event
        - server listens and do calculations
            - randomize deck
            - draw 4 cards for each player (poker style) 
            - 